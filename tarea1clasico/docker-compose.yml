version: '3.8'

services:
  caching:
    image: bitnami/redis:6.0.16
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: redis-server --bind caching --maxmemory 5mb --maxmemory-policy allkeys-random
    volumes:
      - './redis_data:/bitnami/redis/data'
    ports:
      - "6379:6379"
  database:
    restart: always
    image: bitnami/postgresql:11
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - type: bind
        source: ./db/data/postgres
        target: /var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  backend:
    depends_on:
      - caching
      - database
      - grcpsv
    restart: always
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_HOST=database
      - PORT=$BACKEND_PORT
      - REDIS_HOST=caching
    volumes:
      - ./backend/index.js:/home/node/index.js
      - ./backend/example.proto:/home/node/example.proto
      - ./backend/grpc_client.js:/home/node/grpc_client.js
    ports:
      - "$BACKEND_PORT:$BACKEND_PORT"
  grcpsv:
    depends_on:
      - caching
      - database
    restart: always
    build:
      context: ./backend/grpcsv
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_HOST=database
      - PORT=5000
      - REDIS_HOST=caching
    volumes:
      - ./backend/grpcsv/index.js:/home/node/index.js
      - ./backend/grpcsv/example.proto:/home/node/example.proto
      - ./backend/grpcsv/data.json:/home/node/data.json
      - ./backend/grpcsv/grpc_server.js:/home/node/grpc_server.js
    ports:
      - "5000:5000"
      - "4500:4500"
  frontend:
    depends_on:
      - database
      - backend
    restart: always
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - REACT_APP_BACKEND_PORT=$BACKEND_PORT
      - REACT_APP_BACKEND_HOST=backend
      - PORT=$FRONTEND_PORT
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    ports:
      - "$FRONTEND_PORT:$FRONTEND_PORT"

volumes:
  redis_data:
    driver: local
